<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <actionCalls>
        <name>Send_Email_Notification</name>
        <label>Send Email Notification</label>
        <locationX>182</locationX>
        <locationY>947</locationY>
        <actionName>emailSimple</actionName>
        <actionType>emailSimple</actionType>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>emailAddresses</name>
            <value>
                <stringValue>caseclosed@innovativetaxreliefllc.com</stringValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>emailSubject</name>
            <value>
                <elementReference>SubjectFormula</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>emailBody</name>
            <value>
                <elementReference>Body</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>sendRichBody</name>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </inputParameters>
        <nameSegment>emailSimple</nameSegment>
        <offset>0</offset>
    </actionCalls>
    <apiVersion>62.0</apiVersion>
    <assignments>
        <name>Assign_Close_Unsucessfully</name>
        <label>Assign Close Unsucessfully</label>
        <locationX>50</locationX>
        <locationY>647</locationY>
        <assignmentItems>
            <assignToReference>Get_Case.Status</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>Case Completed Failed</stringValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Update_Cases</targetReference>
        </connector>
    </assignments>
    <decisions>
        <name>Found_Case</name>
        <label>Found Case?</label>
        <locationX>182</locationX>
        <locationY>539</locationY>
        <defaultConnector>
            <targetReference>Send_Email_Notification</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>No</defaultConnectorLabel>
        <rules>
            <name>Yes</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Get_Case</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Assign_Close_Unsucessfully</targetReference>
            </connector>
            <label>Yes</label>
        </rules>
    </decisions>
    <decisions>
        <name>Record_Types</name>
        <label>Record Types</label>
        <locationX>270</locationX>
        <locationY>323</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>X1T</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.RecordType.Name</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>First Trade</stringValue>
                </rightValue>
            </conditions>
            <label>1T</label>
        </rules>
        <rules>
            <name>X2T</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.RecordType.Name</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Second Trade</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Get_Case</targetReference>
            </connector>
            <label>2T</label>
        </rules>
        <rules>
            <name>X3T</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.RecordType.Name</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Third Trade</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <isGoTo>true</isGoTo>
                <targetReference>Get_Case</targetReference>
            </connector>
            <label>3T</label>
        </rules>
    </decisions>
    <environments>Default</environments>
    <formulas>
        <name>SubjectFormula</name>
        <dataType>String</dataType>
        <expression>{!$Record.Name} &amp; &quot; Opportunity Closed Lost &amp; Case Closed Unsuccessfully&quot;</expression>
    </formulas>
    <interviewLabel>Opportunity - Closed Lost Opportunity {!$Flow.CurrentDateTime}</interviewLabel>
    <label>Opportunity - Closed Lost Opportunity</label>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>AUTO_LAYOUT_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>AutoLaunchedFlow</processType>
    <recordLookups>
        <name>Get_Case</name>
        <label>Get Case</label>
        <locationX>182</locationX>
        <locationY>431</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Found_Case</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Opportunity__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Case</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordUpdates>
        <name>Update_Cases</name>
        <label>Update Cases</label>
        <locationX>50</locationX>
        <locationY>755</locationY>
        <connector>
            <targetReference>Send_Email_Notification</targetReference>
        </connector>
        <inputReference>Get_Case</inputReference>
    </recordUpdates>
    <start>
        <locationX>144</locationX>
        <locationY>0</locationY>
        <connector>
            <targetReference>Record_Types</targetReference>
        </connector>
        <doesRequireRecordChangedToMeetCriteria>true</doesRequireRecordChangedToMeetCriteria>
        <filterLogic>and</filterLogic>
        <filters>
            <field>StageName</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Closed Lost</stringValue>
            </value>
        </filters>
        <object>Opportunity</object>
        <recordTriggerType>CreateAndUpdate</recordTriggerType>
        <triggerType>RecordAfterSave</triggerType>
    </start>
    <status>Active</status>
    <textTemplates>
        <name>Body</name>
        <isViewedAsPlainText>false</isViewedAsPlainText>
        <text>&lt;p&gt;Hello team,&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;The opportunity {!$Record.Name} has been marked as &lt;em&gt;Closed Lost&lt;/em&gt;. Additionally, the related case has been closed unsuccessfully.&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;If you have any questions or require further clarification, please feel free to reach out the billing team.&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;Thank you for your time and consideration.&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;Best regards,&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;Innovative Tax Relief LLC&lt;/p&gt;</text>
    </textTemplates>
</Flow>
